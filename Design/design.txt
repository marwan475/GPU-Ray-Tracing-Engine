
Ray Tracing Engine

- Compute
  - use OpenCL to compute vector math
  - Generates an Array of pixel color data

- Renderer
  - Renders the pixel data to the screen using OpenGL

- UI
  - ImGUI to create the engines UI/editing features


Main Design/features

UI
 - viewport to view the scene
 - allows you too add objects to the scene
 - select object shapes and colors
 - place object 3d position
 - move camera in 3d space
 - move where camera is looking at
 - render the scene
 - save image
 - save scene
 - load scene
 - create new scene
 - set dimensions and aspect ratio of scene
 - set sampling size of rendering algorithm

Computaions
 - renders the scene based on scene data
 - each pixel color from the cameras viewport is calculated using its ray
 - pixel color computaions will be computed on the GPU using OpenCL
 - an array of pixel color data will be returned to the main program
 - will use multithreading to fill out array quicker

Renderer
 - gets the array of pixel data
 - uses array to create a texture using OpenGL
 - uses OpenGL to render the texture to the viewport of the UI

Main
 - gets data from UI and adjust the scene
 - sends scene data to Computations 
 - recives array of pixel data from Computations
 - sends array to renderer 

Project Structure

- / 
    engine.cpp -- main
    Makefile
    /Saved_Images
    /Saved_scenes
    /UI
      ui.cpp -- Ui layout code
      /imgui -- imgui libary
    /rendering
      render.cpp -- OpenGL texture creation code
    /computations
      /vector    
        vec3.h
        vec3.cpp
      /rays
        ray.h
        ray.cpp
      /utility
        utility.h
        utility.cpp
      /objects
        objects.h
        objects.cpp
      /computation
        computation.h
        computation.cpp
      /camera
        camera.h
        camera.cpp




    
